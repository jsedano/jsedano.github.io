---
layout: post
title:  "Redis 2022"
date:   2022-09-17 00:00:00 -0600
categories: redis
tags: redis
comments: true
---

What is Redis (Remote Dictionary Server) on 2022. What can we do with it. How to scale. How to run it on the cloud.

## What is Redis?

Redis is a key value store, just like a hash table. It can be used in-memory as cache and data will not be persisted or it can persist the data and be use as data storage. [Keys][redis keys] can have a length to up to 512 MB.

It can also be used as a [message queue / message broker.][redis message queue and message broker]

## Supported data types

Redis supports several data types

|Type                |Max Size            | Description              |
|--------------------|--------------------|--------------------------|
|[Strings][redis Strings]|512 MB              | Bytes, text, serialized objects, binary arrays             |
|[Lists][redis Lists]|2^32 - 1 (4,294,967,295) elements.            | Linked list of Redis Strings           |
|[Sets][redis Sets]| 2^32 - 1 (4,294,967,295) members.              | Unordered unique Redis Strings            |
|[Sorted Sets][redis Sorted Sets]| Not specified | Every String has also an integer weight that you must set up |
|[Hashes][redis Hashes]| 4,294,967,295 (2^32 - 1) field-value pairs              | Hash table |
|[Streams][redis Streams]|  Not specified |Used to track real time events and allows consumers and consumer groups to read them|

### Special use cases types

- [Geospatial][redis Geospatial]

Allows to store coordinates and perform operations such as finding the closest one.

- [HyperLogLog][redis HyperLogLog]

Not gonna even try to summarize this one, [read this instead.][Redis new data structure: the HyperLogLog]

- [Bitmaps][redis Bitmaps]

Use a String like a bit vector, allows performing bitwise operations.

- [Bitfields][redis Bitfields]

Allows storing, atomic read, write and read operations for 1 bit unsigned integers to 63 signed bit integers.

## Additional support

### [RedisJSON][Redis JSON]

Adds facilities to store json documents and adds operations to be able to access / update fields using [JSONPath][JSONPath].

### [RedisGraph][Redis Graph]

A graph database.

### [RedisTimeSeries][Redis TimeSeries]

Module that adds a time series data structure to Redis, allowing querying by start / end time.

### [RedisBloom][Redis Bloom]

Probabilistic data structures.

### [RedisInsight][Redis Insight]

Visual support that helps optimizing your stuff on Redis.

## [Message queues with Redis Pub/Sub][Redis PubSub]

We can use Redis to create channels, send messages to the channels and have subscribers that recive the message.

## Redis on the cloud

### redis cloud

We can use a hosted service using the offer from Redis on [Redis Cloud][Redis cloud].

Or you can install it following [guides detailed here.][Redis install]

### [aws][aws]

AWS only supports Redis as an in memmory database, but you could try to install it on a service like EC2 and put a separate storage to persist.

### [gcp][gcp]

Google cloud platform currently does not suppert persisting the data out of the box.

### [azure][azure]

Apparently you can persist using out of the box redis services on azure, but they dont recomend it.

## Scalabity

You can scale horizontally using [Redis Cluster][Redis Cluster] where you have a master that replicates the information between replicas, but it doesn't guarantees that you are not going to lose data, if you are unlucky that a replica is randomly selected as master and then it goes down before propagating the changes, it can lose data, unless you configure it so that the master has to acknowledge having replicated the information, but then you have to accept a hit on your performance.

## [Security][Redis Security]

Redis recomends that redis is only used on trusted environments where only trusted clients can access it.



[redis keys]:https://redis.io/docs/data-types/tutorial/#keys
[redis message queue and message broker]:https://redis.com/solutions/use-cases/messaging/
[redis Strings]:https://redis.io/docs/data-types/tutorial/#strings
[redis Lists]:https://redis.io/docs/data-types/lists/
[redis Sets]:https://redis.io/docs/data-types/sets/
[redis Sorted Sets]:https://redis.io/docs/data-types/sorted-sets/
[redis Hashes]:https://redis.io/docs/data-types/hashes/
[redis Streams]:https://redis.io/docs/data-types/streams/
[redis Geospatial]:https://redis.io/docs/data-types/geospatial/
[redis HyperLogLog]:https://redis.io/docs/data-types/geospatial/
[redis Bitmaps]:https://redis.io/docs/data-types/geospatial/
[redis Bitfields]:https://redis.io/docs/data-types/geospatial/
[Redis new data structure: the HyperLogLog]:http://antirez.com/news/75
[Redis JSON]:https://redis.io/docs/stack/json/
[JSONPath]:https://goessner.net/articles/JsonPath/
[Redis Graph]:https://redis.io/docs/stack/graph/
[Redis TimeSeries]:https://redis.io/docs/stack/timeseries/
[Redis Bloom]:https://redis.io/docs/stack/bloom/
[Redis Insight]:https://redis.io/docs/stack/insight/
[Redis PubSub]:https://redis.io/docs/manual/pubsub/
[Redis cloud]:https://redis.com/try-free/
[Redis aws]:https://aws.amazon.com/redis/
[aws]:https://aws.amazon.com/redis/
[Redis install]:https://developer.redis.com/create/from-source/
[gcp]:https://cloud.google.com/memorystore/docs/redis/redis-overview
[azure]:https://azure.microsoft.com/en-us/products/cache/
[Redis Cluster]:https://redis.io/docs/manual/scaling/
[Redis Security]:https://redis.io/docs/manual/security/
